// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String             @id @default(uuid())
  clerkUserId       String             @unique
  resumes           Resume[]
  interviewSessions InterviewSession[]

  @@map("users")
}

model Resume {
  id        String    @id @default(uuid())
  userId    String
  title     String
  content   Json
  score     Float?
  scoredAt  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  User      User      @relation(fields: [userId], references: [id])

  InterviewSession InterviewSession[]

  @@map("resumes")
}

model InterviewSession {
  id String @id @default(uuid())

  userId          String
  resumeId        String
  positionApplied String
  duration        Int
  type            InterviewType
  score           Float?
  language        String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  resume  Resume            @relation(fields: [resumeId], references: [id])
  answers InterviewAnswer[]

  user User @relation(fields: [userId], references: [id])

  @@map("interview_sessions")
}

model InterviewAnswer {
  id        String           @id @default(uuid())
  sessionId String
  question  String?
  answer    String?
  feedback  String?
  score     Float?
  session   InterviewSession @relation(fields: [sessionId], references: [id])

  @@map("interview_answers")
}

enum InterviewType {
  TECHNICAL
  BEHAVIORAL
}
